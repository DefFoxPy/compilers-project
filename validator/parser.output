Terminals unused in grammar

   TOKEN_EOF
   TOKEN_IF
   TOKEN_ELSE


Grammar

    0 $accept: program $end

    1 program: procedure

    2 procedure: TOKEN_PROCEDURE TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE
    3          | TOKEN_MOVE TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    4 commands: commands command
    5         | command

    6 command: TOKEN_MOVE TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN
    7        | TOKEN_TURN_LEFT TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN
    8        | TOKEN_TURN_RIGHT TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN
    9        | TOKEN_LIGHT_UP TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN
   10        | TOKEN_LOOP TOKEN_LEFT_PAREN TOKEN_INT TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE
   11        | TOKEN_CALL TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_EOF (258)
TOKEN_INT (259) 10
TOKEN_IDENTIFIER (260) 2 11
TOKEN_MOVE (261) 3 6
TOKEN_TURN_LEFT (262) 7
TOKEN_TURN_RIGHT (263) 8
TOKEN_LOOP (264) 10
TOKEN_LIGHT_UP (265) 9
TOKEN_PROCEDURE (266) 2
TOKEN_CALL (267) 11
TOKEN_LEFT_PAREN (268) 2 3 6 7 8 9 10 11
TOKEN_RIGHT_PAREN (269) 2 3 6 7 8 9 10 11
TOKEN_LEFT_BRACE (270) 2 10
TOKEN_RIGHT_BRACE (271) 2 10
TOKEN_IF (272)
TOKEN_ELSE (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
procedure (21)
    on left: 2 3, on right: 1
commands (22)
    on left: 4 5, on right: 2 4 10
command (23)
    on left: 6 7 8 9 10 11, on right: 4 5


State 0

    0 $accept: . program $end

    TOKEN_MOVE       shift, and go to state 1
    TOKEN_PROCEDURE  shift, and go to state 2

    program    go to state 3
    procedure  go to state 4


State 1

    3 procedure: TOKEN_MOVE . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 5


State 2

    2 procedure: TOKEN_PROCEDURE . TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: procedure .

    $default  reduce using rule 1 (program)


State 5

    3 procedure: TOKEN_MOVE TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 8


State 6

    2 procedure: TOKEN_PROCEDURE TOKEN_IDENTIFIER . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_LEFT_PAREN  shift, and go to state 9


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 procedure: TOKEN_MOVE TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN .

    $default  reduce using rule 3 (procedure)


State 9

    2 procedure: TOKEN_PROCEDURE TOKEN_IDENTIFIER TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_PAREN  shift, and go to state 10


State 10

    2 procedure: TOKEN_PROCEDURE TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN . TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 11


State 11

    2 procedure: TOKEN_PROCEDURE TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE . commands TOKEN_RIGHT_BRACE

    TOKEN_MOVE        shift, and go to state 12
    TOKEN_TURN_LEFT   shift, and go to state 13
    TOKEN_TURN_RIGHT  shift, and go to state 14
    TOKEN_LOOP        shift, and go to state 15
    TOKEN_LIGHT_UP    shift, and go to state 16
    TOKEN_CALL        shift, and go to state 17

    commands  go to state 18
    command   go to state 19


State 12

    6 command: TOKEN_MOVE . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 20


State 13

    7 command: TOKEN_TURN_LEFT . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 21


State 14

    8 command: TOKEN_TURN_RIGHT . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 22


State 15

   10 command: TOKEN_LOOP . TOKEN_LEFT_PAREN TOKEN_INT TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_LEFT_PAREN  shift, and go to state 23


State 16

    9 command: TOKEN_LIGHT_UP . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 24


State 17

   11 command: TOKEN_CALL . TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 25


State 18

    2 procedure: TOKEN_PROCEDURE TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands . TOKEN_RIGHT_BRACE
    4 commands: commands . command

    TOKEN_MOVE         shift, and go to state 12
    TOKEN_TURN_LEFT    shift, and go to state 13
    TOKEN_TURN_RIGHT   shift, and go to state 14
    TOKEN_LOOP         shift, and go to state 15
    TOKEN_LIGHT_UP     shift, and go to state 16
    TOKEN_CALL         shift, and go to state 17
    TOKEN_RIGHT_BRACE  shift, and go to state 26

    command  go to state 27


State 19

    5 commands: command .

    $default  reduce using rule 5 (commands)


State 20

    6 command: TOKEN_MOVE TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 28


State 21

    7 command: TOKEN_TURN_LEFT TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 29


State 22

    8 command: TOKEN_TURN_RIGHT TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 30


State 23

   10 command: TOKEN_LOOP TOKEN_LEFT_PAREN . TOKEN_INT TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_INT  shift, and go to state 31


State 24

    9 command: TOKEN_LIGHT_UP TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 32


State 25

   11 command: TOKEN_CALL TOKEN_IDENTIFIER . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 33


State 26

    2 procedure: TOKEN_PROCEDURE TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE .

    $default  reduce using rule 2 (procedure)


State 27

    4 commands: commands command .

    $default  reduce using rule 4 (commands)


State 28

    6 command: TOKEN_MOVE TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN .

    $default  reduce using rule 6 (command)


State 29

    7 command: TOKEN_TURN_LEFT TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN .

    $default  reduce using rule 7 (command)


State 30

    8 command: TOKEN_TURN_RIGHT TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN .

    $default  reduce using rule 8 (command)


State 31

   10 command: TOKEN_LOOP TOKEN_LEFT_PAREN TOKEN_INT . TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_PAREN  shift, and go to state 34


State 32

    9 command: TOKEN_LIGHT_UP TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN .

    $default  reduce using rule 9 (command)


State 33

   11 command: TOKEN_CALL TOKEN_IDENTIFIER TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 35


State 34

   10 command: TOKEN_LOOP TOKEN_LEFT_PAREN TOKEN_INT TOKEN_RIGHT_PAREN . TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 36


State 35

   11 command: TOKEN_CALL TOKEN_IDENTIFIER TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN .

    $default  reduce using rule 11 (command)


State 36

   10 command: TOKEN_LOOP TOKEN_LEFT_PAREN TOKEN_INT TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE . commands TOKEN_RIGHT_BRACE

    TOKEN_MOVE        shift, and go to state 12
    TOKEN_TURN_LEFT   shift, and go to state 13
    TOKEN_TURN_RIGHT  shift, and go to state 14
    TOKEN_LOOP        shift, and go to state 15
    TOKEN_LIGHT_UP    shift, and go to state 16
    TOKEN_CALL        shift, and go to state 17

    commands  go to state 37
    command   go to state 19


State 37

    4 commands: commands . command
   10 command: TOKEN_LOOP TOKEN_LEFT_PAREN TOKEN_INT TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands . TOKEN_RIGHT_BRACE

    TOKEN_MOVE         shift, and go to state 12
    TOKEN_TURN_LEFT    shift, and go to state 13
    TOKEN_TURN_RIGHT   shift, and go to state 14
    TOKEN_LOOP         shift, and go to state 15
    TOKEN_LIGHT_UP     shift, and go to state 16
    TOKEN_CALL         shift, and go to state 17
    TOKEN_RIGHT_BRACE  shift, and go to state 38

    command  go to state 27


State 38

   10 command: TOKEN_LOOP TOKEN_LEFT_PAREN TOKEN_INT TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE commands TOKEN_RIGHT_BRACE .

    $default  reduce using rule 10 (command)
